{
  "guid": "http://blog.wildsky.cc/?p=149",
  "date": "2016-02-05T00:10:46",
  "slug": "electron",
  "link": "/posts/electron/",
  "title": "試用 Electron 的心得",
  "excerpt": "<p>因為昨天在讀學徒模式，裡面提到了「建造可拋棄式玩具」這個模式，所以我就依循他的建議， 做了一個圈圈叉叉遊戲，目&#8230;</p>\n",
  "feature_image_url": null,
  "content": "\n<p>因為昨天在讀學徒模式，裡面提到了「建造可拋棄式玩具」這個模式，所以我就依循他的建議， 做了一個圈圈叉叉遊戲，目前只有弄出 Linux 和 Mac 版，Windows 版聽說比較麻煩， 所以等改天心情好了再做。</p>\n\n\n\n<p>來講講這幾個小時的心境轉折以及遇到的困難。</p>\n\n\n\n<!--more-->\n\n\n\n<h2 id=\"electron-的-quick-start-真的超-quick\">Electron 的 Quick Start 真的超 Quick</h2>\n\n\n\n<p>超簡單，兩個指令就成功地跑起 electron app 了：</p>\n\n\n\n<pre class=\"wp-block-code\"><code>git clone https://github.com/atom/electron-quick-start\ncd electron-quick-start &amp;&amp; npm install &amp;&amp; npm start</code></pre>\n\n\n\n<p>這時就會跳出一個包含有 chrome dev tool 的超陽春視窗了！</p>\n\n\n\n<h2 id=\"electron-的簡單概念\">Electron 的簡單概念</h2>\n\n\n\n<p>Electron 非常方便，你可以用 HTML + CSS + JavaScript 建立出一個 Desktop Application， 也就是俗稱的桌面應用程式， 以前寫桌面程式要用 C/C++ 、Java 或是一些比較硬底子、不那麼善解人意的語言去寫， 現在只要會寫網站的工程師就能夠寫桌面程式哩！</p>\n\n\n\n<p>那為什麼可以這樣呢？ 其實概念很簡單，你可以看看自己的 Chrome， 他有分頁標籤、工具列… 之類的東西， 當你把這些東西拿掉，看起來就是個桌面程式哩！ 這就是 Electrion 的最基本想法：</p>\n\n\n\n<blockquote class=\"wp-block-quote\"><p>Electron 就是 chrome 拿掉工具列，拿掉分頁標籤，再載入 HTML 檔罷了。</p></blockquote>\n\n\n\n<p>大不了加些和系統對話的 API 給你用，其他基本上就是這個概念而已， 這也就是為什麼剛剛在試的時候會看到眼熟的東西的原因了。</p>\n\n\n\n<h2 id=\"開始動手\">開始動手！</h2>\n\n\n\n<p>圈叉遊戲其實也沒什麼，簡單寫一下我的架構:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>\n&lt;table>\n  &lt;tr>\n    &lt;td>\n      &lt;input type=\"checkbox\">\n      &lt;label for=\"\">&lt;div>&lt;/div>&lt;/label>\n    &lt;/td>\n    &lt;td>\n      &lt;input type=\"checkbox\">\n      &lt;label for=\"\">&lt;div>&lt;/div>&lt;/label>\n    &lt;/td>\n    &lt;td>\n      &lt;input type=\"checkbox\">\n      &lt;label for=\"\">&lt;div>&lt;/div>&lt;/label>\n    &lt;/td>\n  &lt;/tr>\n  &lt;tr>\n    &lt;td>\n      &lt;input type=\"checkbox\">\n      &lt;label for=\"\">&lt;div>&lt;/div>&lt;/label>\n    &lt;/td>\n    &lt;td>\n      &lt;input type=\"checkbox\">\n      &lt;label for=\"\">&lt;div>&lt;/div>&lt;/label>\n    &lt;/td>\n    &lt;td>\n      &lt;input type=\"checkbox\">\n      &lt;label for=\"\">&lt;div>&lt;/div>&lt;/label>\n    &lt;/td>\n  &lt;/tr>\n  &lt;tr>\n    &lt;td>\n      &lt;input type=\"checkbox\">\n      &lt;label for=\"\">&lt;div>&lt;/div>&lt;/label>\n    &lt;/td>\n    &lt;td>\n      &lt;input type=\"checkbox\">\n      &lt;label for=\"\">&lt;div>&lt;/div>&lt;/label>\n    &lt;/td>\n    &lt;td>\n      &lt;input type=\"checkbox\">\n      &lt;label for=\"\">&lt;div>&lt;/div>&lt;/label>\n    &lt;/td>\n  &lt;/tr>\n&lt;/table>\n\n</code></pre>\n\n\n\n<p>簡單地說，就是一個 3 * 3 的表格，裡面放 div 而已～ 詳細的程式碼在文末有附上連結，可以自行參考。</p>\n\n\n\n<h2 id=\"寫的過程中有用到什麼資源-遇到什麼問題\">寫的過程中有用到什麼資源？遇到什麼問題？</h2>\n\n\n\n<p>畢竟還是在寫程式，寫著寫著總是會用到一些資源， 這邊就記錄一下我在寫的過程中有用到的東西～</p>\n\n\n\n<h3 id=\"漸層色\">漸層色</h3>\n\n\n\n<p>因為我很懶得選顏色，所以就直接用 uigradients 的顏色去著色， 目前的顏色是隨便放的，改天心情好再去做修改。</p>\n\n\n\n<h3 id=\"判斷式\">判斷式</h3>\n\n\n\n<p>圈叉的勝利判斷有 8 種，說多不多，但說少也確實不少， 目前是用窮舉法，把八種情況都列出來， 心情好再去看看別人有沒有更漂亮的寫法。</p>\n\n\n\n<h3 id=\"不能用-foreach\">不能用 forEach</h3>\n\n\n\n<p>這個我當時就傻眼，還一直用&nbsp;<code>[].forEach(()=&gt;{})</code>&nbsp;確認他確實可以跑， 但我在寫的時候就真的不能用， 吃完飯後還是百思不得其解， 一查才發現原來&nbsp;<code>document.querySelectorAll</code>&nbsp;抓出來的元素並不是 array ，而是 NodeList… 於是我在 forEach 的前一行加上&nbsp;<code>NodeList.prototype.forEach = Array.prototype.forEach;</code>&nbsp;他就可以用了。</p>\n\n\n\n<p>順便提一下，不要什麼東西都要用 jQuery 啊，如果只是因為要選元素，那可以直接用&nbsp;<code>document.querySelectorAll</code>， 用法就跟 jQuery 的 $(“CSS selector”) 一樣，像是：</p>\n\n\n\n<pre class=\"wp-block-code\"><code>var divs = document.querySelectorAll(\"#main table tr td div\");\n</code></pre>\n\n\n\n<p>然後現在純 JS 也支援 classList 了，用法也很方便：</p>\n\n\n\n<pre class=\"wp-block-code\"><code>var div = document.querySelector(\"#yo\");\ndiv.classList.remove(\"blue\");\ndiv.classList.add(\"red\");\n</code></pre>\n\n\n\n<p>這次的寫法原本有好幾個全域變數，後來才把他們都塞進 game 這個全域變數裡面， 之後要再把他用 IIFE 包起來，不過這樣好像就要加不少 listener 了… 之後再研究。</p>\n\n\n\n<h2 id=\"打包\">打包</h2>\n\n\n\n<blockquote class=\"wp-block-quote\"><p>一箱裝書一箱裝 CD，房間空出，心裡裝回憶。一邊偷哭一邊收行李，打包的工夫，AIN&#8217;T SO EASY。</p><cite>—— 蛋堡《打包》</cite></blockquote>\n\n\n\n<p>花了不少時間，終於把他寫完了，但總不能叫別人用我 APP 之前都要先 Build 一次吧，&nbsp;<del>又不是每個人都拿 Linux，</del>&nbsp;所以還是要找方法打包，原本以為是官方文件裡面的 Application Packaging 那一章節， 但我怎麼看都看不懂，照他說的依樣畫葫蘆還是一樣不知道生出來的 asar 檔可以幹嘛。</p>\n\n\n\n<p>後來去找了一下以後發現原來是在 Application Distribution 之下，不過我努力地看了看，還是看不懂…</p>\n\n\n\n<p>這時候心裡莫名有個聲音：「想要找到解答嗎？想要的話可以全部給你，去 Youtube 找吧！我把所有的答案都放在那裡了。」 </p>\n\n\n\n<p>搜尋了一下，找到了 Kyle Robinson Young 的 《Packaging and Distributing Electron Desktop Apps》。 裡面提到了一個工具：「electron-packager」，簡單地看了一下他的影片，就開始動手打包了， 因為過程實在太簡單，這邊就不贅述，簡單寫一下步驟就好：</p>\n\n\n\n<ol><li>安裝 electron-packager:&nbsp;<code>sudo npm i electron-packager -g</code></li><li>在 package.json 加入要打包的指令&nbsp;<code>electron-packager . --platform=linux --arch=x64 --version=0.36.5 Tic-Tac-Toe-Game</code></li><li>執行&nbsp;<code>npm run build</code></li></ol>\n\n\n\n<p>打包完了以後，我發現了一件事… Mac 版的包居然有 100MB，而 Linux 居然高達 400MB， 這真的太誇張了！！！ 於是我就開始找資料、問人，後來在亂翻 build 出來的資料夾時，發現了 node_modules 這個資料夾， 想想好像不用把他加進來，就手動刪除，程式還是可以跑！ 所以我就把他刪掉啦！ </p>\n\n\n\n<p>electron-packager 好像有個 –ignore=“要忽略的檔案路徑” 選項可以用， 但我用了半天用不出來… 有空再來研究要怎麼讓他自動消失， 最糟的情況就是在 build 的指令裡面多寫個&nbsp;<code>&amp;&amp; rm /path/to/folders</code>&nbsp;而已。真怪，明明就有支援了，為什麼不能用呢…？</p>\n\n\n\n<h2 id=\"後記-結論\">後記 &amp; 結論</h2>\n\n\n\n<p>「建立可拋棄玩具」確實有幫助！ 在短短幾個小時內就學到了個新東西， 雖然之前就有玩過， 但總是玩個兩天還是沒半點成果， 今次有建立起一個小玩具了，雖然沒有什麼太高深的技術， 但至少讓我更熟悉這個我以後說不定會用到的技能了。</p>\n\n\n\n<h3 id=\"優點\">優點</h3>\n\n\n\n<p>方便！只要用前端的三個語言來寫， 內容架構用 HTML，樣式風格用 CSS，互動用 JavaScript， 寫桌面程式就跟寫網頁一樣，還可以跨平台！ 而且還可以搭配一堆框架什麼的 react.js、Angular.js 只要是寫網頁的資源， 用了 Electron 就可以變成寫桌面程式的資源啦！</p>\n\n\n\n<h3 id=\"缺點\">缺點</h3>\n\n\n\n<p>缺點也很明顯，Build 出來的成品檔案大小太龐大。</p>\n\n\n\n<p>此外，可以預期使用 electron 建立的應用程式所耗用的記憶體應該也會非常多。就像一開始說的，electron 就是 Chrome 拿掉不重要的東西再載入 HTML 檔， 也就是說，可以把 Electron App 當作是一個 Chrome。所以如果電腦裡有 10 個這種 App，那就等於你電腦裡同時有十個 Chrome 在運作… 光聽起來好恐怖⋯</p>\n\n\n\n<h2 id=\"參考資料\">參考資料</h2>\n\n\n\n<ul><li>Electron 官網：&nbsp;<a href=\"http://electron.atom.io/\">http://electron.atom.io</a></li><li>Kyle Robinson Young 的 Packaging and Distributing Electron Desktop Apps:&nbsp;<a href=\"https://www.youtube.com/watch?v=dz5SnmBzBXc\">https://www.youtube.com/watch?v=dz5SnmBzBXc</a></li><li>Electron-packager 的 npm 頁面：<a href=\"https://www.npmjs.com/package/electron-packager\">https://www.npmjs.com/package/electron-packager</a></li><li>圈叉遊戲的 source code：<a href=\"https://github.com/wildskyf/Tic-Tac-Toe-Game\">https://github.com/wi1d5ky/Tic-Tac-Toe-Game</a><a href=\"https://github.com/wildskyf/Tic-Tac-Toe-Game/\"></a></li><li>討論 document.querySelectorAll 的 forEach 文章：<a href=\"https://css-tricks.com/snippets/javascript/loop-queryselectorall-matches/\">https://css-tricks.com/snippets/javascript/loop-queryselectorall-matches/</a></li></ul>\n"
}