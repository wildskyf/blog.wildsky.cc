{
  "guid": "https://blog.wildsky.cc/?p=1572",
  "date": "2020-02-25T11:17:53",
  "slug": "next-js-the-react-static-generator",
  "link": "/posts/next-js-the-react-static-generator/",
  "title": "Next.js &#8211; 使用 React.js 的靜態網站產生器",
  "excerpt": "<p>最近因為工作上的需要，開始在研究 Next.js 這個框架。 Why 選擇一樣新技術/框架的時候總要從「為什麼&#8230;</p>\n",
  "feature_image_url": "https://backend.wildsky.cc/wp-content/uploads/2020/02/螢幕快照-2020-02-25-上午11.14.08.png",
  "content": "\n<p>最近因為工作上的需要，開始在研究 Next.js 這個框架。</p>\n\n\n\n<h2>Why</h2>\n\n\n\n<p>選擇一樣新技術/框架的時候總要從「為什麼出發」，這邊就列一下我們團隊＆專案的需求：</p>\n\n\n\n<!--more-->\n\n\n\n<ul><li><strong>Static Website</strong>：因為我們主要是去爬資料，然後跑一些分析，最後直接產生頁面出來。比較不會有 user generate 的部分，所以可以變成靜態網站。靜態網站的好處有很多，不用擔心 DB 會掛，可以不用 Server 直接丟 S3。</li><li><strong>React.js</strong>：我們公司的 99% 的網站產品都是用 react.js 打造而成的，所以為了讓大家<s>方便交接</s>寫得習慣。此外，用 React 就有幾個內建的好處：<ul><li>可以動態 routing，速度比較快</li><li>Component 化，重用性高</li><li>資料導向，一樣好維護</li></ul></li></ul>\n\n\n\n<p>這兩個算是 Required，另外還有兩個：</p>\n\n\n\n<ul><li>Event Trigger：根據 DB 的更動，event trigger 地重 build 靜態網站</li><li>Progressive Build：重 build 的時候，不要重 build 那些已經 build 過一次的網站</li></ul>\n\n\n\n<p>後面這兩項根據我目前的研究，看起來還沒有辦法達成。可能還是只能在我們的 piepline 裡面固定 call to build。</p>\n\n\n\n<p>不過很多人都知道且會想問：用 React.js 的靜態網站除了 Next.js 之外，還有 GatsbyJS 呀！Why Next.js？</p>\n\n\n\n<h2>Why Next.js</h2>\n\n\n\n<p>之前在研究的時候，曾經看到一則推文：</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><a href=\"https://twitter.com/gatsbyjs/status/929922732870983680\"><img width=\"1024\" height=\"665\" src=\"https://blog.wildsky.cc/wp-content/uploads/2020/02/螢幕快照-2020-02-25-上午10.19.56-1024x665.png\" alt=\"\" class=\"wp-image-1573\" srcset=\"https://backend.wildsky.cc/wp-content/uploads/2020/02/螢幕快照-2020-02-25-上午10.19.56-1024x665.png 1024w, https://backend.wildsky.cc/wp-content/uploads/2020/02/螢幕快照-2020-02-25-上午10.19.56-300x195.png 300w, https://backend.wildsky.cc/wp-content/uploads/2020/02/螢幕快照-2020-02-25-上午10.19.56-768x499.png 768w, https://backend.wildsky.cc/wp-content/uploads/2020/02/螢幕快照-2020-02-25-上午10.19.56.png 1192w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /></a><figcaption>「Google Page Speed 不太有用。」 -—— <a href=\"https://twitter.com/gatsbyjs/status/929922732870983680\">Gatsby on Twitter, 2017</a></figcaption></figure>\n\n\n\n<p>據我猜想（代表沒有特別研究，只是猜想），Google Page Speed 的評價應當會有部分地被 Google Search 作為 Ranking 的判斷標準之一，所以多少還是要看一下他的分數。</p>\n\n\n\n<p>對於一個技術框架的公關來說，這個回應實在不太讓我欣賞。</p>\n\n\n\n<p>此外，今年稍早我又看到一個消息：</p>\n\n\n\n<blockquote class=\"wp-block-quote\"><p>Google has been investing in a variety of web frameworks, including Next.js, to help developers build better web applications.</p><cite><a href=\"https://www.techrepublic.com/article/insiders-look-at-googles-web-framework-contributions-to-next-js-and-more/\">An insider&#8217;s look at Google&#8217;s web framework contributions to Next.js and more</a></cite></blockquote>\n\n\n\n<p>Google 來投資 Next.js 欸，我還不用爆！</p>\n\n\n\n<h2>簡單介紹</h2>\n\n\n\n<p>這邊就簡單介紹一下 Next.js 的幾個特點，至於詳細的用法就請自行去看他的<a href=\"https://nextjs.org/learn/basics/getting-started\">教學</a>和<a href=\"https://nextjs.org/docs/getting-started\">文件</a>了。</p>\n\n\n\n<h3>1.  用資料夾來 Routing</h3>\n\n\n\n<p>他有一個 <code>pages/</code> 的特殊資料夾，在裡面建立 <code>index.js</code> 就會對應到首頁；建立 <code>about.js</code> 就對應到 <code>/about</code> 十分直覺。</p>\n\n\n\n<p>至於動態 routing（<code>/posts/123</code>）這種網址就直接在 <code>pages</code>/ 中建一個 <code>posts/</code> 資料夾，然後在裡面建立 <code>[articleId].js</code> ，就可以在裡面拿到 <code>articleId</code> 的值，進行對應的資料擷取與處理了。</p>\n\n\n\n<h3>2. 框架支援 Static Gen 和 SSR 兩種方式</h3>\n\n\n\n<p>只要你沒有在頁面中用 <code>getInitialProps</code> 這個靜態方法，那你的頁面就會被 build 成純 HTML。</p>\n\n\n\n<p>如果用了，就要看你在 <code>next.config.js</code> 中的設定：<a href=\"https://nextjs.org/learn/excel/automatic-static-optimization/finally\">Automatic Static Optimization</a>。</p>\n\n\n\n<h3>3. 利用 <code>exportPathMap</code> 打 API 把動態的頁面全部 render 出來</h3>\n\n\n\n<p>就是這章，我找了好久：<a href=\"https://nextjs.org/learn/excel/static-html-export\">static-html-export</a>。有了這個就可以直接把該打的資料先打一打，然後把整個 routing tree 都 gen 出來。</p>\n\n\n\n<h3>4. 使用 <code>styled-jsx</code></h3>\n\n\n\n<p>我自己很喜歡這種寫法，雖然他也支援其他的 CSS 引入方式，但用了一下覺得十分稱手。且 <code>styled-jsx</code> 亦是 zeit 家開發的，next.js + styled-jsx = 信仰超值啊。</p>\n\n\n\n<h3>5. 其它</h3>\n\n\n\n<p>還支援動態引入 module 和 component 的 feature 我還沒有時間去看，短期內應該也還用不到，所以暫且按下不表。</p>\n\n\n\n<h2>結尾</h2>\n\n\n\n<p>這篇文章只是簡單記錄選擇的心路歷程，順便介紹一下這個最近蠻喜歡的框架。如果需要更詳細的功能介紹，可以去看 <a href=\"https://eden-liu.com/\">Eden Liu</a> 的 <a href=\"https://eden-liu.com/frontend/next-js-more/\">Next.js – 再多認識你一點</a>。雖然是 2018 年初的文章，但大 feature 應當大同小異，不過為了確保東西都能如預期，還是建議去讀官方的 <a href=\"https://nextjs.org/learn/basics/getting-started\">教學</a> 和<a href=\"https://nextjs.org/docs/getting-started\"> 文件</a> 啦。</p>\n"
}